---
import { CategoryType, type Category } from "../../types";
import DefaultCategory from "./Default/DefaultCategory.tsx";
import SubCategory from "./SubCategory.astro";
import TextBased from "./TextBased/TextBased.tsx";
import TwoInARow from "./TwoInARow/TwoInARow";

interface Props {
  category: Category;
}

const { category } = Astro.props;

const { menu } = Astro.params;

const searchParams = Astro.url.searchParams;

const hasSubCategories = category.subcategories.length > 0;
---

<section class="p-4 pt-24 md:pt-24" id={`category-${category.id}`}>
  <header class="flex flex-col items-center justify-center h-12">
    <img src="/public/category-icon.svg" alt="category-icon" />
    <h1
      class="text-[20px]/[20px] md:text-[40px]/[40px] uppercase font-normal text-primary"
    >
      {category.name}
    </h1>
  </header>

  <div class="space-y-8 mt-32">
    {
      category.image && (
        <img src={category.image} alt={category.slug} class="w-full" />
      )
    }

    {
      hasSubCategories &&
        category.subcategories.map((sc) => <SubCategory category={sc} />)
    }

    {
      category.category_type === CategoryType.DEFAULT && (
        <DefaultCategory
          category={category}
          lang={searchParams.get("lang") || "ru"}
          client:visible
        />
      )
    }

    {
      category.category_type === CategoryType.TWO_IN_A_ROW && (
        <TwoInARow
          category={category}
          menu={menu}
          lang={searchParams.get("lang") || "ru"}
          client:visible
        />
      )
    }

    {
      category.category_type === CategoryType.TEXT_BASED && (
        <TextBased
          category={category}
          menu={menu}
          lang={searchParams.get("lang") || "ru"}
          client:visible
        />
      )
    }
  </div>
</section>
